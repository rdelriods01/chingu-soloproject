{"version":3,"sources":["Components/Searchbar.jsx","Components/Gallery.jsx","App.jsx","fbconfig.js","serviceWorker.js","index.js"],"names":["Searchbar","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","searchInput","addClass","handleKeyPress","ev","key","searchBook","handleChange","setState","target","value","props","reset","console","log","search","inherits","createClass","_this2","toastClass","push","setTimeout","pop","react_default","a","createElement","className","join","type","placeholder","onChange","onKeyPress","onClick","Component","Gallery","items","map","item","i","_item$volumeInfo","volumeInfo","title","imageLinks","infoLink","authors","publisher","src","undefined","thumbnail","alt","href","fb","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","App","loader","query","functions","httpsCallable","readBooks","then","res","data","catch","err","Components_Searchbar","Gallery_Gallery","role","aria-label","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d0059247.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport class Searchbar extends Component {\r\n\r\n    state = {\r\n        searchInput: '',\r\n        addClass: false\r\n    }\r\n\r\n    render() {\r\n        let toastClass = [\"toast2\"]\r\n        if (this.state.addClass) {\r\n            toastClass.push('show');\r\n            setTimeout(() => {\r\n                toastClass.pop();\r\n                this.setState({\r\n                    addClass: false\r\n                })\r\n            }, 4000);\r\n        }\r\n        return (\r\n            <div className=\"searchbar\" >\r\n                <div className={toastClass.join(' ')}><div className=\"desc\">Please provide a title or author in the input search.</div></div>\r\n                <input type=\"search\" placeholder=\"Search by book title, author...\" onChange={this.handleChange} onKeyPress={this.handleKeyPress} />\r\n                <button onClick={this.searchBook}  >Search</button>\r\n            </div>\r\n        )\r\n    }\r\n    handleKeyPress = (ev) => {\r\n        if (ev.key === 'Enter') {\r\n            this.searchBook();\r\n        }\r\n    }\r\n    handleChange = (ev) => {\r\n        this.setState({\r\n            searchInput: ev.target.value\r\n        }, () => {\r\n            if (this.state.searchInput === '') {\r\n                this.props.reset();\r\n            }\r\n        })\r\n    }\r\n    searchBook = () => {\r\n        if (this.state.searchInput === '' || this.state.searchInput[0] === ' ') {\r\n            this.setState({\r\n                addClass: true\r\n            })\r\n        } else {\r\n            console.log('It will search for: ' + this.state.searchInput);\r\n            this.props.search(this.state.searchInput);\r\n        }\r\n    }\r\n}\r\n\r\nexport default Searchbar\r\n","import React, { Component } from 'react';\r\n\r\nexport default class Gallery extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"gallery\">\r\n                {\r\n                    this.props.items && this.props.items.map((item, i) => {\r\n                        let { title, imageLinks, infoLink, authors, publisher } = item.volumeInfo\r\n                        return (\r\n                            <div className=\"card\" key={i}>\r\n                                <div className=\"grid\">\r\n                                    <img src={imageLinks !== undefined ? imageLinks.thumbnail : ''} alt=\"book\" className=\"bookImage\" />\r\n                                    <div className=\"details\">\r\n                                        <h4>{title}</h4>\r\n                                        {authors ? <p>By: {authors[0]} {(authors.length > 1) ? 'and others' : ''} </p> : <div></div>}\r\n                                        {publisher ? <p>Published by: {publisher} </p> : <div></div>}\r\n                                        <div className=\"btn\"><a href={infoLink}>See this book</a></div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n                        );\r\n                    })\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport firebase from 'firebase/app';\r\nimport fbconfig from './fbconfig';\r\nimport 'firebase/functions';\r\n\r\nimport Searchbar from './Components/Searchbar';\r\nimport Gallery from './Components/Gallery';\r\n\r\nconst fb = firebase.initializeApp(fbconfig);\r\n\r\nclass App extends Component {\r\n\r\n  state = {\r\n    items: [],\r\n    loader: false,\r\n    addClass: false\r\n  }\r\n\r\n  searchBook = (query) => {\r\n    this.setState({\r\n      loader: true\r\n    })\r\n    const readBooks = fb.functions().httpsCallable('searchBook');\r\n    readBooks(query).then(res => {\r\n      if (res.data.items) {\r\n        this.setState({\r\n          loader: false,\r\n          items: res.data.items\r\n        })\r\n      } else {\r\n        this.setState({\r\n          loader: false,\r\n          items: [],\r\n          addClass: true\r\n        })\r\n      }\r\n    })\r\n      .catch(err => {\r\n        console.log(err);\r\n      })\r\n  }\r\n\r\n  reset = () => {\r\n    this.setState({\r\n      items: []\r\n    })\r\n  }\r\n\r\n  render() {\r\n    let toastClass = [\"toast\"]\r\n    if (this.state.addClass) {\r\n      toastClass.push('show');\r\n      setTimeout(() => {\r\n        toastClass.pop();\r\n        this.setState({\r\n          addClass: false\r\n        })\r\n      }, 4000);\r\n    }\r\n    return (\r\n      <div className=\"App\">\r\n        <div className={toastClass.join(' ')}><div className=\"desc\">No results! Try with another query please.</div></div>\r\n        <div className=\"upper\">\r\n          <h1>BOOK FINDER</h1>\r\n          <Searchbar search={(query) => this.searchBook(query)} reset={this.reset} />\r\n        </div>\r\n        <div className=\"lower\">\r\n          {\r\n            this.state.loader ?\r\n              <div className=\"loader\">Loader...</div> :\r\n              this.state.items.length > 1 ?\r\n                <Gallery items={this.state.items} /> :\r\n                <p className=\"notgallery\" ><span role=\"img\" aria-label=\"sadman\" >☹️</span> Nothing Here Yet - Try Searching For A Book! </p>\r\n          }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","export default {\r\n    apiKey: \"AIzaSyBjVxcNZWqikxk7hZEg1YCrrSJVgPZlUBU\",\r\n    authDomain: \"rdrp-chingu-soloproject.firebaseapp.com\",\r\n    databaseURL: \"https://rdrp-chingu-soloproject.firebaseio.com\",\r\n    projectId: \"rdrp-chingu-soloproject\",\r\n    storageBucket: \"rdrp-chingu-soloproject.appspot.com\",\r\n    messagingSenderId: \"631175457499\"\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport './loader.scss';\r\nimport './notifications.scss';\r\nimport App from './App.jsx';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}